# VPC Creation
resource "aws_vpc" "example_vpc" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name = "example-vpc"
  }
}

# Subnets
resource "aws_subnet" "web_subnet" {
  vpc_id = aws_vpc.example_vpc.id
  cidr_block = "10.0.1.0/24"
  tags = {
    Name = "web-subnet"
  }
}

resource "aws_subnet" "app_subnet" {
  vpc_id = aws_vpc.example_vpc.id
  cidr_block = "10.0.2.0/24"
  tags = {
    Name = "app-subnet"
  }
}

resource "aws_subnet" "db_subnet" {
  vpc_id = aws_vpc.example_vpc.id
  cidr_block = "10.0.3.0/24"
  tags = {
    Name = "db-subnet"
  }
}

# Security Groups
resource "aws_security_group" "web_sg" {
  name_prefix = "web-"
  vpc_id = aws_vpc.example_vpc.id
  ingress {
    from_port = 80
    to_port = 80
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_security_group" "app_sg" {
  name_prefix = "app-"
  vpc_id = aws_vpc.example_vpc.id
  ingress {
    from_port = 8080
    to_port = 8080
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port = 5432
    to_port = 5432
    protocol = "tcp"
    security_groups = [aws_security_group.db_sg.id]
  }
}

resource "aws_security_group" "db_sg" {
  name_prefix = "db-"
  vpc_id = aws_vpc.example_vpc.id
  ingress {
    from_port = 5432
    to_port = 5432
    protocol = "tcp"
    security_groups = [aws_security_group.app_sg.id]
  }
}

# Elastic Load Balancer
resource "aws_elb" "example_elb" {
  name = "example-elb"
  subnets = [aws_subnet.web_subnet.id]
  security_groups = [aws_security_group.web_sg.id]
  listener {
    instance_port = 8080
    instance_protocol = "http"
    lb_port = 80
    lb_protocol = "http"
  }
}

# EC2 Instances
resource "aws_instance" "web_instance" {
  ami = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"
  vpc_security_group_ids = [aws_security_group.web_sg.id]
  subnet_id = aws_subnet.web_subnet.id
  tags = {
    Name = "web-instance"
  }
}

resource "aws_instance" "app_instance" {
  ami = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"
  vpc_security_group_ids = [aws_security_group.app_sg.id]
  subnet_id = aws_subnet.app_subnet.id
  tags = {
    Name = "app-instance"
  }
}

resource "aws_instance
